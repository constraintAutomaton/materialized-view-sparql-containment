@Article{Chekuri2000,
  author   = {Chandra Chekuri and Anand Rajaraman},
  journal  = {Theoretical Computer Science},
  title    = {Conjunctive query containment revisited},
  year     = {2000},
  issn     = {0304-3975},
  number   = {2},
  pages    = {211-229},
  volume   = {239},
  abstract = {We consider the problems of conjunctive query containment and minimization, which are known to be NP-complete, and show that these problems can be solved in polynomial time for the class of acyclic queries. We then generalize the notion of acyclicity and define a parameter called query width that captures the “degree of cyclicity” of a query: in particular, a query is acyclic if and only if its query width is 1. We give algorithms for containment and minimization that run in time polynomial in nk, where n is the input size and k is the query width. These algorithms naturally generalize those for acyclic queries, and are of practical significance because many queries have small query width compared to their sizes. We show that good bounds on the query width of Q can be obtained using the treewidth of the incidence graph of Q. We then consider the problem of finding an equivalent query to a given conjunctive query Q that has the least number of subgoals. We show that a polynomial-time approximation algorithm is unlikely for this problem. Finally, we apply our containment algorithm to the practically important problem of finding equivalent rewritings of a query using a set of materialized views.},
  doi      = {https://doi.org/10.1016/S0304-3975(99)00220-0},
  url      = {https://www.sciencedirect.com/science/article/pii/S0304397599002200},
}

@Article{Halevy2001,
  author    = {Halevy, Alon Y.},
  journal   = {The VLDB Journal},
  title     = {Answering queries using views: A survey},
  year      = {2001},
  issn      = {1066-8888},
  month     = dec,
  number    = {4},
  pages     = {270–294},
  volume    = {10},
  doi       = {10.1007/s007780100054},
  publisher = {Springer Science and Business Media LLC},
  url       = {http://dx.doi.org/10.1007/s007780100054},
}






@Article{Tarjan1984,
  author   = {Tarjan, Robert E. and Yannakakis, Mihalis},
  journal  = {SIAM Journal on Computing},
  title    = {Simple Linear-Time Algorithms to Test Chordality of Graphs, Test Acyclicity of Hypergraphs, and Selectively Reduce Acyclic Hypergraphs},
  year     = {1984},
  number   = {3},
  pages    = {566-579},
  volume   = {13},
  abstract = {Chordal graphs arise naturally in the study of Gaussian elimination on sparse symmetric matrices; acyclic hypergraphs arise in the study of relational data bases. Rose, Tarjan and Lueker [SIAM J. Comput., 5 (1976), pp. 266–283] have given a linear-time algorithm to test whether a graph is chordal, which Yannakakis has modified to test whether a hypergraph is acyclic. Here we develop a simplified linear-time test for graph chordality and hypergraph acyclicity. The test uses a new kind of graph (and hypergraph) search, which we call maximum cardinality search A variant of the method gives a way to selectively reduce acyclic hypergraphs, which is needed for evaluating queries in acyclic relational data bases.},
  doi      = {10.1137/0213035},
  eprint   = {https://doi.org/10.1137/0213035},
  url      = {https://doi.org/10.1137/0213035},
}

@InProceedings{10.1145/2594538.2594542,
  author    = {Pichler, Reinhard and Skritek, Sebastian},
  booktitle = {Proceedings of the 33rd ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems},
  title     = {Containment and equivalence of well-designed SPARQL},
  year      = {2014},
  address   = {New York, NY, USA},
  pages     = {39–50},
  publisher = {Association for Computing Machinery},
  series    = {PODS '14},
  abstract  = {Query containment and query equivalence constitute important computational problems in the context of static query analysis and optimization. While these problems have been intensively studied for fragments of relational calculus, almost no works exist for the semantic web query language SPARQL. In this paper, we carry out a comprehensive complexity analysis of containment and equivalence for several fragments of SPARQL: we start with the fundamental fragment of well-designed SPARQL restricted to the AND and OPTIONAL operator. We then study basic extensions in the form of the UNION operator and/or projection. The results obtained range from NP-completeness to undecidability.},
  doi       = {10.1145/2594538.2594542},
  isbn      = {9781450323758},
  keywords  = {RDF, SPARQL, query containment, semantic web},
  location  = {Snowbird, Utah, USA},
  numpages  = {12},
  url       = {https://doi.org/10.1145/2594538.2594542},
}

@InProceedings{Perez2006,
  author    = {P{\'e}rez, Jorge and Arenas, Marcelo and Gutierrez, Claudio},
  booktitle = {The Semantic Web - ISWC 2006},
  title     = {Semantics and Complexity of SPARQL},
  year      = {2006},
  address   = {Berlin, Heidelberg},
  editor    = {Cruz, Isabel and Decker, Stefan and Allemang, Dean and Preist, Chris and Schwabe, Daniel and Mika, Peter and Uschold, Mike and Aroyo, Lora M.},
  pages     = {30--43},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {SPARQL is the W3C candidate recommendation query language for RDF. In this paper we address systematically the formal study of SPARQL, concentrating in its graph pattern facility. We consider for this study simple RDF graphs without special semantics for literals and a simplified version of filters which encompasses all the main issues. We provide a compositional semantics, prove there are normal forms, prove complexity bounds, among others that the evaluation of SPARQL patterns is PSPACE-complete, compare our semantics to an alternative operational semantics, give simple and natural conditions when both semantics coincide and discuss optimization procedures.},
  isbn      = {978-3-540-49055-5},
}

@InCollection{Doan2012,
  author    = {AnHai Doan and Alon Halevy and Zachary Ives},
  booktitle = {Principles of Data Integration},
  publisher = {Morgan Kaufmann},
  title     = {2 - Manipulating Query Expressions},
  year      = {2012},
  address   = {Boston},
  editor    = {AnHai Doan and Alon Halevy and Zachary Ives},
  isbn      = {978-0-12-416044-6},
  pages     = {21-63},
  doi       = {https://doi.org/10.1016/B978-0-12-416044-6.00002-8},
  url       = {https://www.sciencedirect.com/science/article/pii/B9780124160446000028},
}

@InProceedings{WudageChekol2013,
  author    = {Wudage Chekol, Melisachew and Euzenat, J{\'e}r{\^o}me and Genev{\`e}s, Pierre and Laya{\"i}da, Nabil},
  booktitle = {The Semantic Web -- ISWC 2013},
  title     = {Evaluating and Benchmarking SPARQL Query Containment Solvers},
  year      = {2013},
  address   = {Berlin, Heidelberg},
  editor    = {Alani, Harith and Kagal, Lalana and Fokoue, Achille and Groth, Paul and Biemann, Chris and Parreira, Josiane Xavier and Aroyo, Lora and Noy, Natasha and Welty, Chris and Janowicz, Krzysztof},
  pages     = {408--423},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Query containment is the problem of deciding if the answers to a query are included in those of another query for any queried database. This problem is very important for query optimization purposes. In the SPARQL context, it can be equally useful. This problem has recently been investigated theoretically and some query containment solvers are available. Yet, there were no benchmarks to compare theses systems and foster their improvement. In order to experimentally assess implementation strengths and limitations, we provide a first SPARQL containment test benchmark. It has been designed with respect to both the capabilities of existing solvers and the study of typical queries. Some solvers support optional constructs and cycles, while other solvers support projection, union of conjunctive queries and RDF Schemas. No solver currently supports all these features or OWL entailment regimes. The study of query demographics on DBPedia logs shows that the vast majority of queries are acyclic and a significant part of them uses UNION or projection. We thus test available solvers on their domain of applicability on three different benchmark suites. These experiments show that (i) tested solutions are overall functionally correct, (ii) in spite of its complexity, SPARQL query containment is practicable for acyclic queries, (iii) state-of-the-art solvers are at an early stage both in terms of capability and implementation.},
  isbn      = {978-3-642-41338-4},
}

@InProceedings{Stadler2018,
  author    = {Stadler, Claus and Saleem, Muhammad and Ngomo, Axel-Cyrille Ngonga and Lehmann, Jens},
  booktitle = {Web Engineering},
  title     = {Efficiently Pinpointing SPARQL Query Containments},
  year      = {2018},
  address   = {Cham},
  editor    = {Mikkonen, Tommi and Klamma, Ralf and Hern{\'a}ndez, Juan},
  pages     = {210--224},
  publisher = {Springer International Publishing},
  abstract  = {Query containment is a fundamental problem in database research, which is relevant for many tasks such as query optimisation, view maintenance and query rewriting. For example, recent SPARQL engines built on Big Data frameworks that precompute solutions to frequently requested query patterns, are conceptually an application of query containment. We present an approach for solving the query containment problem for SPARQL queries -- the W3C standard query language for RDF datasets. Solving the query containment problem can be reduced to the problem of deciding whether a sub graph isomorphism exists between the normalized algebra expressions of two queries.},
  isbn      = {978-3-319-91662-0},
}

@Article{Spasic2023,
  author   = {Mirko Spasić and Milena {Vujošević Janičić}},
  journal  = {Journal of Web Semantics},
  title    = {Solving the SPARQL query containment problem with SpeCS},
  year     = {2023},
  issn     = {1570-8268},
  pages    = {100770},
  volume   = {76},
  abstract = {The query containment problem is a fundamental computer science problem which was originally defined for relational queries. With the growing popularity of the sparql query language, it became relevant and important in this new context: reliable and efficient sparql query containment solvers may have various applications within static analysis of queries, especially in the area of query optimizations and refactoring. In this paper, we present a new approach for solving the query containment problem in sparql. The approach is based on reducing the query containment problem to the satisfiability problem in first order logic. It covers a wide range of the sparql language constructs, including union of conjunctive queries, blank nodes, projections, subqueries, clauses from, filter, optional, graph, etc. It also covers containment under rdf schema entailment regime, and it can deal with the subsumption relation. We describe an implementation of the approach, an open source solver SpeCS and its thorough experimental evaluation on two relevant benchmarks, Query Containment Benchmark and SQCFramework. As a side result, SpeCS identified incorrect test cases within both benchmarks, which were manually checked, confirmed and fixed, resulting in better and more reliable benchmarks. The evaluation also shows that SpeCS is highly efficient and that compared to the state-of-the-art solvers, it gives more precise results in a shorter amount of time. In addition, SpeCS has the highest coverage of the supported language constructs.},
  doi      = {https://doi.org/10.1016/j.websem.2022.100770},
  keywords = {SPARQL, Query containment, FOL modeling, SMT solving, SpeCS solver},
  url      = {https://www.sciencedirect.com/science/article/pii/S1570826822000543},
}

@InProceedings{9161435,
  author    = {Spasić, Mirko and Janičić, Milena Vujošević},
  booktitle = {2020 Zooming Innovation in Consumer Technologies Conference (ZINC)},
  title     = {SpeCS — SPARQL Query Containment Solver},
  year      = {2020},
  month     = {May},
  pages     = {31-35},
  abstract  = {With increasing popularity and importance of Semantic Web and its application, SPARQL, as a standard language for querying RDF data, gains more importance and receives additional attention from both practitioners and researchers coming from various domains. In database world, the query containment problem is a fundamental problem, crucially important in verification and optimization of queries. In this paper, we present our work on developing SPECS, an efficient solver for this problem in SPARQL query language. Our approach reduces query containment problem to the satisfiability problem in theories of the first order logic, and exploits SMT solver Z3 for checking the constructed formula. We present an evaluation that shows that our solver is much faster and covers more language features than the other available state-of-the-art solvers.},
  doi       = {10.1109/ZINC50678.2020.9161435},
  keywords  = {Resource description framework;Benchmark testing;Databases;Database languages;Tools;Electronic mail;Standards;semantic web;SPARQL;query containment;query modeling;SMT solving;SPECS},
}

@Article{10.1145/1567274.1567278,
  author     = {P\'{e}rez, Jorge and Arenas, Marcelo and Gutierrez, Claudio},
  journal    = {ACM Trans. Database Syst.},
  title      = {Semantics and complexity of SPARQL},
  year       = {2009},
  issn       = {0362-5915},
  month      = sep,
  number     = {3},
  volume     = {34},
  abstract   = {SPARQL is the standard language for querying RDF data. In this article, we address systematically the formal study of the database aspects of SPARQL, concentrating in its graph pattern matching facility. We provide a compositional semantics for the core part of SPARQL, and study the complexity of the evaluation of several fragments of the language. Among other complexity results, we show that the evaluation of general SPARQL patterns is PSPACE-complete. We identify a large class of SPARQL patterns, defined by imposing a simple and natural syntactic restriction, where the query evaluation problem can be solved more efficiently. This restriction gives rise to the class of well-designed patterns. We show that the evaluation problem is coNP-complete for well-designed patterns. Moreover, we provide several rewriting rules for well-designed patterns whose application may have a considerable impact in the cost of evaluating SPARQL queries.},
  address    = {New York, NY, USA},
  articleno  = {16},
  doi        = {10.1145/1567274.1567278},
  issue_date = {August 2009},
  keywords   = {Complexity, RDF, SPARQL, query language, semantic Web},
  numpages   = {45},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/1567274.1567278},
}

@Article{Afrati2010,
  author   = {Foto N. Afrati and Matthew Damigos and Manolis Gergatsoulis},
  journal  = {Information Processing Letters},
  title    = {Query containment under bag and bag-set semantics},
  year     = {2010},
  issn     = {0020-0190},
  number   = {10},
  pages    = {360-369},
  volume   = {110},
  abstract = {Conjunctive queries (CQs) are at the core of query languages encountered in many logic-based research fields such as AI, or database systems. The majority of existing work assumes set semantics but often in real applications the manipulation of duplicate tuples is required. One of the major problems that arises as part of advanced features of query optimization, data integration, query reformulation and many other research topics is testing for containment of such queries. In this work, we investigate the complexity of query containment problem for CQs under bag semantics (i.e. duplicate tuples are allowed in both the database and the results of queries) and under bag-set semantics (i.e. duplicates are allowed in the result of the queries but not in the database). We derive complexity results for these problems for five major subclasses of CQs; and we also find necessary conditions for CQ query containment. The general case of these problems remains open.},
  doi      = {https://doi.org/10.1016/j.ipl.2010.02.017},
  keywords = {Databases, Query containment, Conjunctive queries, Bag semantics, Bag-set semantics},
  url      = {https://www.sciencedirect.com/science/article/pii/S0020019010000517},
}

@InProceedings{Angles2016,
  author    = {Angles, Renzo and Gutierrez, Claudio},
  booktitle = {The Semantic Web -- ISWC 2016},
  title     = {The Multiset Semantics of SPARQL Patterns},
  year      = {2016},
  address   = {Cham},
  editor    = {Groth, Paul and Simperl, Elena and Gray, Alasdair and Sabou, Marta and Kr{\"o}tzsch, Markus and Lecue, Freddy and Fl{\"o}ck, Fabian and Gil, Yolanda},
  pages     = {20--36},
  publisher = {Springer International Publishing},
  abstract  = {The paper determines the algebraic and logic structure of the multiset semantics of the core patterns of SPARQL. We prove that the fragment formed by AND, UNION, OPTIONAL, FILTER, MINUS and SELECT corresponds precisely to both, the intuitive multiset relational algebra (projection, selection, natural join, arithmetic union and except), and the multiset non-recursive Datalog with safe negation.},
  isbn      = {978-3-319-46523-4},
}

@InProceedings{Montoya2015,
  author    = {Montoya, Gabriela and Skaf-Molli, Hala and Molli, Pascal and Vidal, Maria-Esther},
  booktitle = {The Semantic Web - ISWC 2015},
  title     = {Federated SPARQL Queries Processing with Replicated Fragments},
  year      = {2015},
  address   = {Cham},
  editor    = {Arenas, Marcelo and Corcho, Oscar and Simperl, Elena and Strohmaier, Markus and d'Aquin, Mathieu and Srinivas, Kavitha and Groth, Paul and Dumontier, Michel and Heflin, Jeff and Thirunarayan, Krishnaprasad and Thirunarayan, Krishnaprasad and Staab, Steffen},
  pages     = {36--51},
  publisher = {Springer International Publishing},
  abstract  = {Federated query engines provide a unified query interface to federations of SPARQL endpoints. Replicating data fragments from different Linked Data sources facilitates data re-organization to better fit federated query processing needs of data consumers. However, existing federated query engines are not designed to support replication and replicated data can negatively impact their performance. In this paper, we formulate the source selection problem with fragment replication (SSP-FR). For a given set of endpoints with replicated fragments and a SPARQL query, the problem is to select the endpoints that minimize the number of tuples to be transferred. We devise the Fedra source selection algorithm that approximates SSP-FR. We implement Fedra in the state-of-the-art federated query engines FedX and ANAPSID, and empirically evaluate their performance. Experimental results suggest that Fedra efficiently solves SSP-FR, reducing the number of selected SPARQL endpoints as well as the size of query intermediate results.},
  isbn      = {978-3-319-25007-6},
}

@Comment{jabref-meta: databaseType:bibtex;}
